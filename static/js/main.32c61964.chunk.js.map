{"version":3,"sources":["data/QuizGenerator.js","utils/HtmlDecoder.js","components/Question.js","components/Answer.js","components/AnswerList.js","components/Score.js","components/HitPoints.js","components/GameOver.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","a","axios","get","response","data","token","getQuestion","results","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","Question","props","question","category","difficulty","className","Answer","value","clickHandler","type","onClick","AnswerList","correctAnswer","correct_answer","incorrectcAnswers","incorrect_answers","answers","sort","Math","random","map","item","Score","HitPoints","point","heart","xmlns","viewBox","fill","fillRule","d","clipRule","Array","GameOver","score","App","useState","dummyData","questionData","setQuestion","setToken","setScore","hitPoints","setHitPoints","isOver","setIsOver","useEffect","QuizGenerator","then","clickAnswer","selected","correct","e","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32c61964.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getToken = async () => {\n  const response = await axios.get('https://opentdb.com/api_token.php?command=request');\n  return response.data.token;\n};\n\nconst getQuestion = async (token) => {\n  const response = await axios.get(`https://opentdb.com/api.php?amount=1&token=${token}`);\n  return response.data.results[0];\n};\n\nexport default { getToken, getQuestion };\n","export default function htmlDecode(input) {\n  const doc = new DOMParser().parseFromString(input, 'text/html');\n  return doc.documentElement.textContent;\n}\n","import htmlDecode from '../utils/HtmlDecoder';\n\nexport default function Question(props) {\n  const { question, category, difficulty } = props;\n  return (\n    <div className=\"relative p-5 my-3 w-96 bg-blue-200 rounded border-2 border-blue-300\">\n      <div className=\"p-1 mb-3 w-10 h-7 absolute -top-3 -left-3 flex justify-center items-center rounded bg-blue-500\">\n        <div className=\" text-white font-bold\">\n          {difficulty === 'easy' ? '10' : '20'}\n        </div>\n      </div>\n      <div className=\"my-3 text-lg font-bold \">\n        {htmlDecode(question)}\n      </div>\n      <div className=\"text-center font-bold text-blue-400 text-sm\">\n        {category}\n      </div>\n    </div>\n  );\n}\n","import htmlDecode from '../utils/HtmlDecoder';\n\nexport default function Answer(props) {\n  const { value, clickHandler } = props;\n  return (\n    <button\n      type=\"button\"\n      onClick={() => clickHandler(value)}\n      className=\"w-96 h-min p-2 border-2 border-blue-300 rounded hover:bg-blue-200\"\n    >\n      <div className=\"font-bold text-left text-sm\">\n        {htmlDecode(value)}\n      </div>\n    </button>\n  );\n}\n","import Answer from './Answer';\n\nexport default function AnswerList(props) {\n  const {\n    correct_answer: correctAnswer,\n    incorrect_answers: incorrectcAnswers,\n    clickHandler,\n  } = props;\n  const answers = [\n    correctAnswer,\n    ...incorrectcAnswers,\n  ].sort(() => Math.random() - 0.5);\n\n  return (\n    <div className=\"flex flex-col space-y-3\">\n      {answers.map((item) => (\n        <Answer value={item} clickHandler={clickHandler} />\n      ))}\n    </div>\n  );\n}\n","export default function Score(props) {\n  const { value } = props;\n  return (\n    <div className=\"w-96 flex justify-center items-top\">\n      <div className=\"w-28 h-7 flex justify-center items-center rounded-full bg-indigo-400\">\n        <div className=\"font-bold text-white\">\n          {value}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function HitPoints(props) {\n  const { point } = props;\n  const heart = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" viewBox=\"0 0 20 20\" fill=\"orange\">\n      <path fillRule=\"evenodd\" d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\" clipRule=\"evenodd\" />\n    </svg>\n  );\n  return (\n    <div className=\"pb-3 flex flex-row justify-end\">\n      {[...Array(point)].map(() => heart)}\n    </div>\n  );\n}\n","import Score from './Score';\n\nexport default function GameOver(props) {\n  const { score, clickHandler } = props;\n  return (\n    <div className=\"w-96 p-3 flex flex-col space-y-8 items-center\">\n      <div className=\"text-lg font-bold\">\n        Game Over, Your Score:\n      </div>\n      <Score value={score} />\n      <button\n        type=\"button\"\n        onClick={clickHandler}\n        className=\"w-60 h-min p-2 bg-indigo-200 border-2 border-indigo-300 rounded hover:bg-indigo-300\"\n      >\n        <div className=\"font-bold\">\n          Play Again\n        </div>\n      </button>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useEffect } from 'react';\nimport QuizGenerator from './data/QuizGenerator';\nimport dummyData from './data/dummy.json';\nimport Question from './components/Question';\nimport AnswerList from './components/AnswerList';\nimport Score from './components/Score';\nimport HitPoints from './components/HitPoints';\nimport GameOver from './components/GameOver';\n\nfunction App() {\n  const [questionData, setQuestion] = useState({ ...dummyData });\n  const [token, setToken] = useState('');\n  const [score, setScore] = useState(0);\n  const [hitPoints, setHitPoints] = useState(3);\n  const [isOver, setIsOver] = useState(false);\n\n  const setQuiz = () => {\n    QuizGenerator.getToken().then((item) => { setToken(item); });\n    QuizGenerator.getQuestion(token).then((item) => { setQuestion(item); });\n  };\n\n  useEffect(() => {\n    setQuiz();\n  }, []);\n\n  const changeQuiz = () => {\n    QuizGenerator.getQuestion(token).then((item) => { setQuestion(item); });\n  };\n\n  const clickAnswer = (selected, correct) => {\n    if (selected === correct) {\n      setScore(score + (questionData.difficulty === 'easy' ? 10 : 20));\n    } else {\n      if (hitPoints === 1) {\n        setIsOver(true);\n      }\n      setHitPoints(hitPoints - 1);\n    }\n    changeQuiz();\n  };\n\n  const playAgain = () => {\n    setIsOver(false);\n    setHitPoints(3);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-screen\">\n      <div className=\"rounded-lg border shadow-lg p-10 m-20\">\n        {isOver ? <GameOver score={score} clickHandler={playAgain} /> : (\n          <div>\n            <Score value={score} />\n            <HitPoints point={hitPoints} />\n            <Question {...questionData} />\n            <AnswerList\n              {...questionData}\n              clickHandler={(e) => { clickAnswer(e, questionData.correct_answer); }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}